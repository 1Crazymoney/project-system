<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="14.0">

  <PropertyGroup>
    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)..\</RepositoryRootDirectory>
    <TestsDirectory>$(RepositoryRootDirectory)binaries\$(Configuration)\Tests\</TestsDirectory>
    <SolutionFileWithoutPath>ProjectSystem.sln</SolutionFileWithoutPath>
    <SolutionFile>$(RepositoryRootDirectory)src\$(SolutionFileWithoutPath)</SolutionFile>

    <!-- Make note NUGET_PACKAGES is environment variable respected 
         by NuGet.exe, so don't be tempted to change the name.-->
    <NUGET_PACKAGES Condition="'$(NUGET_PACKAGES)' == ''">$(UserProfile)\.nuget\packages</NUGET_PACKAGES>
    
    <CommonMSBuildGlobalProperties>
      Configuration=$(Configuration);
    </CommonMSBuildGlobalProperties>
  </PropertyGroup>

  <Target Name="RestorePackages">

    <Message Text="Restoring packages for $(SolutionFileWithoutPath)" Importance="high" />
    
    <Exec Command="&quot;$(RepositoryRootDirectory)build\bin\NuGet.exe&quot; restore -verbosity quiet &quot;$(SolutionFile)&quot;" />
  </Target>

  <Target Name="BuildSolution">

    <Message Text="Building $(SolutionFileWithoutPath) [$(Configuration)]" Importance="high" />
    
    <MSBuild BuildInParallel="true"
             Projects="$(SolutionFile)"
             Targets="Build"
             Properties="$(CommonMSBuildGlobalProperties)"
             />
  </Target>

  <Target Name="Test">

    <ItemGroup>
      <TestAssembly Include="$(TestsDirectory)**\*UnitTests.dll" />
      <XmlTestFile Include="$(TestsDirectory)TestResults.xml" />   <!-- For Jenkins to read -->
      <HtmlTestFile Include="$(TestsDirectory)TestResults.html" /> <!-- For Humans to read -->
    </ItemGroup>
    
    <Message Text="Running tests for $(SolutionFileWithoutPath) [$(Configuration)]" Importance="high" />

    <Exec Command="&quot;$(NUGET_PACKAGES)\xunit.runner.console\2.1.0\tools\xunit.console.x86.exe&quot; @(TestAssembly, '&quot;') -quiet -nologo -noshadow -parallel all -xml &quot;@(XmlTestFile)&quot; -html &quot;@(HtmlTestFile)&quot;"
          LogStandardErrorAsError="true"
          IgnoreExitCode="true"
          >
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>

    <Message Text="There were test failures, see %(HtmlTestFile.FullPath)" Condition="$(ExitCode) == 1" Importance="High" />

  </Target>

  <Target Name="Build" DependsOnTargets="RestorePackages;BuildSolution;Test" >

    <Message Text="Build completed for $(SolutionFileWithoutPath)" Importance="high" />
    
  </Target>

</Project>